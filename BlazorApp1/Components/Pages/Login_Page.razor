@page "/login"
@rendermode InteractiveServer
@using BlazorApp1.Utilities
@inject ConnectDB.Connection _connection
@inject Cookie_Storage_Accessor Cookie_Storage_Accessor

<!--Login things-->

<h2>Login</h2>
<p>Enter your text to hash:</p>
<input @bind="Login_Username" placeholder="Enter Username" />
<input @bind="Login_Password" placeholder="Enter Password" />
<button @onclick="Login">Login</button>

@if (IsTwoFactorRequired)
{
    <p>Enter the verification code sent to your email:</p>
    <input @bind="VerificationCode" placeholder="Enter Verification Code" />
    <button @onclick="Verify_Code">Verify Code</button>
}

<p>@Result_Login</p>


@code {
    // connection strings
    private ConnectDB.Connection _website_Connection;
    private Controller.Output_Controller _output_Control;

    // Login Values
    private string Login_Username { get; set; }
    private string Login_Password { get; set; }
    private string VerificationCode { get; set; }
    private string Result_Login { get; set; }
    private bool IsTwoFactorRequired { get; set; } = true;

    // when the site is opened it does that
    protected override async Task OnInitializedAsync()
    {
        _website_Connection = _connection;
        _output_Control = new Controller.Output_Controller();
    }

    public async Task Login()
    {
        bool result = _website_Connection.Try_Login(Login_Username, Login_Password, null);

        if (result)
        {
            // Login successful, set cookie
            await Cookie_Storage_Accessor.Set_Value_Async(Login_Username, result);
            Result_Login = "Login successful!";
        }
        else
        {
            // Check if 2FA is required
            if (result == false && IsTwoFactorRequired)
            {
                Result_Login = "Verification code required. Please check your email.";
            }
            else
            {
                Result_Login = "Invalid username or password.";
            }
        }
    }

    public async Task Verify_Code()
    {
        // Verify the provided verification code
        bool is_Verified = _website_Connection.Try_Login(Login_Username, Login_Password, VerificationCode);

        if (is_Verified)
        {
            // 2FA successful, set cookie
            await Cookie_Storage_Accessor.Set_Value_Async(Login_Username, true);
            Result_Login = "Login successful!";
            IsTwoFactorRequired = false; // Reset the 2FA requirement
        }
        else
        {
            Result_Login = "Invalid verification code.";
        }
    }
}