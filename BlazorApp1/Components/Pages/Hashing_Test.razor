@page "/hashing"
@rendermode InteractiveServer
@implements IDisposable

<h3>Hashing Test</h3>

<!--html for Register of a User-->
<h2>Register</h2>
<p>Enter your text to hash:</p>
<input @bind="Username" placeholder="Enter Username" />
<input @bind="Password" placeholder="Enter Password" />
<button @onclick="Register">Register</button>

<p>@Result_Register</p>

<br />
<br />

<!--Login Site -->
<h2>Login</h2>
<p>Enter your Login Values:</p>
<input @bind="Login_Name" placeholder="Enter your Username" />
<input @bind="Login_Password" placeholder="Enter your Password" />
<button @onclick="Login">Login</button>

<p>@Result_Login</p>

<br />
<br />

<!--html for Searching of a User-->
<h2>DB Output</h2>
<p>Enter the search Parameter</p>
<input @bind="Search_ID" placeholder="Enter ID" />
<input @bind="Search_Username" placeholder="Enter Username to search" />
<button @onclick="LoadUsers">Search User</button>

<ul>
    @if (Users.Count == 0)
    {
        <li>No users found.</li>
    }
    else
    {
        @foreach (var user in Users)
        {
            <li>@user</li>
        }
    }
</ul>

@code {
    [Inject]
    // connection string
    private ConnectDB.Connection _website_Connection { get; set; }
    private Controller.Output_Controller _output_Controller;

    // Register values
    private string Username { get; set; }
    private string Password { get; set; }
    private string Result_Register { get; set; }

    // Login Values
    private string Login_Name { get; set; }
    private string Login_Password { get; set; }
    private string Result_Login { get; set; }

    // Search values
    // for listing all the values of the db
    private int? Search_ID { get; set; }
    private string? Search_Username { get; set; }

    private List<string> Users { get; set; } = new List<string>();

    // when the site is opened it does that
    protected override async Task OnInitializedAsync()
    {
        _output_Controller = new Controller.Output_Controller();
        LoadUsers();
    }

    // this function saves the data
    private void Register()
    {
        bool result = _website_Connection.Save_User_To_DB(Username, Password);

        LoadUsers();
    }

    private void Login()
    {
        bool result = _website_Connection.Try_Login(Login_Name, Login_Password);

        _output_Controller.Login_Output(result);
    }

    // this function loads the users with the function from Connection.cs
    private void LoadUsers()
    {
        Users = _website_Connection.Read_Values(Search_ID, Search_Username);
    }

    // this function will be used when we close the site to close the connection
    public void Dispose()
    {
        _website_Connection?.Close_Connection();
    }
}